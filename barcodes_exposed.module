<?php
/**
 * @file
 * A module that loads up the currentStarCraft 2
 * Grandmaster ladders with known Barcodes real identities.
 */

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */
function barcodes_exposed_help($path, $arg) {
  switch ($path) {
    case "admin/help#barcodes_exposed":
      return '<p>' . t("Load up the current StarCraft 2 Grandmaster ladders with known Barcodes real identities.") . '</p>';
      break;
  }
}

/**
 * Implements hook_block_info().
 */
function barcodes_exposed_block_info() {
  $blocks['barcodes_exposed'] = array(
    // The name that will appear in the block list.
    'info' => t('Barcodes Exposed')
  );

  $blocks['barcodes_exposed_alt'] = array(
    // The name that will appear in the block list.
    'info' => t('Barcodes Exposed Alt')
  );

  return $blocks;
}

/**
 * Custom content function.
 *
 * Set beginning and end dates, retrieve posts from database
 * saved in that time period.
 *
 * @return
 *   A result set of the targeted posts.
 */
function barcodes_exposed_contents() {
  // Get today's date
  $today = getDate();
  // Calculate the date a week ago
  $start_time = mktime(0, 0, 0, $today['mon'], ($today['mday'] - 7), $today['year']);
  // Get all posts from one week ago to the present
  $end_time = time();

  $block_max_num = variable_get('barcodes_exposed_block_max', 5);

  // Use Database API to retrieve current posts
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title', 'created'))
    ->condition('status', 1) // Published
    ->condition('created', array($start_time, $end_time), 'BETWEEN')
    ->orderBy('created', 'DESC') // Most recent first
    ->range(0, $block_max_num)
    ->execute();
  return $query;
}

/**
 * Block view of the module.
 */
function barcodes_exposed_block_view($delta = '') {
  switch ($delta) {
    case 'barcodes_exposed':
      $block['subject'] = t('Barcodes Exposed');
      if (user_access('access content')) {
        // Use our custom function to retrieve data.
        $result = barcodes_exposed_contents();
        // Array to contain items for the block to render.
        $items = array();
        // Iterate over the result set and format as links.
        foreach ($result as $node) {
          $items[] = array(
            'data' => l($node->title, 'node/' . $node->nid)
          );
        }

        // No content in the last week
        if (empty($items)) {
          $block['content'] = t('No posts available');
        } else {
          // Pass data through theme function
          $block['content'] = theme('item_list', array(
            'items' => $items));
        }
      }
    return $block;
  }
}

/**
 * Implements hook_menu.
 */
function barcodes_exposed_menu() {
  $items = array();

  $items['admin/config/content/barcodes_exposed'] = array(
    'title' => 'Barcodes Exposed',
    'description' => 'Configuration for Barcodes Exposed module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('barcodes_exposed_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM
  );

  return $items;
}

/**
 * Page callback: Barcodes Exposed settings.
 *
 * @see barcodes_exposed_menu()
 */
function barcodes_exposed_form($form, &$form_state) {
  $form['barcodes_exposed_block_max'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of Players in block view'),
    '#default_value' => variable_get('barcodes_exposed_block_max', 5),
    '#size' => 3,
    '#maxlength' => 3,
    '#description' => t('The maximum number of players to display in the block view.'),
    '#required' => TRUE
  );

  return system_settings_form($form);
}

/**
 * Implements validation from the Form API
 *
 * @param form
 *   A structured array containing the elements and properties of the form.
 * @param form_state
 *   An array that stores information about the form's current state
 *   during processing
 */
function barcodes_exposed_form_validate($form, &$form_state) {
  $block_max_num = $form_state['values']['barcodes_exposed_block_max'];
  if (!is_numeric($block_max_num)) {
    form_set_error('barcodes_exposed_block_max', t('You must enter a number for the maximum number
        number of Players to display.'));
  } elseif ($block_max_num <= 0) {
    form_set_error('barcodes_exposed_block_max', t('Maximum number of Players to display
        must not be positive'));
  }
}
